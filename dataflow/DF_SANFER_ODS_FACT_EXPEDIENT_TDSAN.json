{
	"name": "DF_SANFER_ODS_FACT_EXPEDIENT_TDSAN",
	"properties": {
		"folder": {
			"name": "SANFER"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_SANFER_FACT_EXPEDIENT_TDSAN",
						"type": "DatasetReference"
					},
					"name": "STGFactExpedientTDSAN"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ODS_SANFER_FACT_EXPEDIENT_TDSAN",
						"type": "DatasetReference"
					},
					"name": "ODSFactExpedientTDSAN",
					"description": "Export data to ODS_SANFER_FACT_EXPEDIENT_TDSAN"
				}
			],
			"transformations": [
				{
					"name": "RenombrarCamposTDSAN"
				},
				{
					"name": "CambiarDataType",
					"description": "Cambiar el data type de los campos"
				},
				{
					"name": "CreacionCampoEstatTramitacio",
					"description": "Se crea el campo DESC_ESTAT_TRAMITACIO basándose en si las fechas están informadas o no i otro tipos de campos."
				},
				{
					"name": "IDEXPEDIENT"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Alta expedient} as string,",
				"          {Num. Agent} as string,",
				"          {Cos Alta } as string,",
				"          {Linia } as string,",
				"          {Trajecte } as string,",
				"          Tren as string,",
				"          {Estació} as string,",
				"          {Codificació denúncia} as string,",
				"          {Data i hora alta de la denúncia} as string,",
				"          {Data i hora de la infracció} as string,",
				"          {Conducta infractora} as string,",
				"          {Conducta infractora entenedor} as string,",
				"          {Codi conducta infractora intern del barem} as string,",
				"          {Codi expedient} as string,",
				"          {Nom de l’infractor} as string,",
				"          {Tipus Document Infractor} as string,",
				"          {Núm. identificació} as string,",
				"          {Adreça infractor} as string,",
				"          {Població} as string,",
				"          {província } as string,",
				"          {Codi Postal infractor} as string,",
				"          {Tipus expedient} as string,",
				"          {Estat de l'expedient} as string,",
				"          {Data acord d’inici} as string,",
				"          {Data Notificació acord d’inici} as string,",
				"          {Import acord d’inici/ Import € proposat Sanció} as string,",
				"          {Motiu arxiu} as string,",
				"          {Data de presentació de l’alegació} as string,",
				"          {Data presentació reconeixement} as string,",
				"          {Notificació carta pagament amb descompte} as string,",
				"          {Data proposta} as string,",
				"          {Data notificació proposta} as string,",
				"          {Data audiència} as string,",
				"          {Data notificació audiència} as string,",
				"          {Data resolució} as string,",
				"          {Tipus de resolució (gravetat)} as string,",
				"          {Data notificació resolució} as string,",
				"          {Import resolució sanció} as string,",
				"          {Import pagat} as string,",
				"          {Data de pagament} as string,",
				"          {Data registre d’entrada del recurs} as string,",
				"          {Tipus de recurs} as string,",
				"          {Data resolució del recurs} as string,",
				"          {Data notificació recurs} as string,",
				"          {Sentit resolució del recurs} as string,",
				"          {Import recurs} as string,",
				"          {Data caducitat} as string,",
				"          {Data prescripció infracció} as string,",
				"          {Data prescripció sanció} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGFactExpedientTDSAN",
				"STGFactExpedientTDSAN select(mapColumn(",
				"          ID_PERSONA_DENUNCIANT = {Num. Agent},",
				"          ID_TIPUS_RECURS = {Tipus de recurs},",
				"          ID_TIPUS_DOCUMENT = {Tipus Document Infractor},",
				"          COD_ALTA = {Cos Alta },",
				"          COD_DENUNCIA_TDSAN = {Codificació denúncia},",
				"          COD_BAREM = {Codi conducta infractora intern del barem},",
				"          COD_DOCUMENT = {Núm. identificació},",
				"          COD_OPERADOR_FERROVIARI = {Tipus expedient},",
				"          COD_ESTAT_EXPEDIENT = {Estat de l'expedient},",
				"          NUM_CODI_POSTAL = {Codi Postal infractor},",
				"          NUM_EXPEDIENT = {Codi expedient},",
				"          IMP_SANCIO = {Import acord d’inici/ Import € proposat Sanció},",
				"          IMP_SANCIO_FERMA = {Import resolució sanció},",
				"          IMP_TOTAL_PAGAT = {Import pagat},",
				"          IMP_RECURS = {Import recurs},",
				"          DESC_TIPUS_GRAVETAT = {Tipus de resolució (gravetat)},",
				"          DESC_ESTACIO = {Estació},",
				"          DESC_LINIA = {Linia },",
				"          DESC_TRAJECTE = {Trajecte },",
				"          DESC_TREN = Tren,",
				"          DESC_CONDUCTA_INFRACTORA = {Conducta infractora},",
				"          DESC_CONDUCTA_INFRACTORA_ENTENEDORA = {Conducta infractora entenedor},",
				"          DESC_NOM_COMPLET = {Nom de l’infractor},",
				"          DESC_ADRECA = {Adreça infractor},",
				"          DESC_POBLACIO = {Població},",
				"          DESC_PROVINCIA = {província },",
				"          DESC_MOTIU_ARXIU = {Motiu arxiu},",
				"          DESC_SENTIT = {Sentit resolució del recurs},",
				"          DATA_ALTA_SISTEMA = {Alta expedient},",
				"          DATA_DENUNCIA = {Data i hora alta de la denúncia},",
				"          DATA_INFRACCIO = {Data i hora de la infracció},",
				"          DATA_ACORD_INICI = {Data acord d’inici},",
				"          DATA_NOTIFICACIO_AI = {Data Notificació acord d’inici},",
				"          DATA_RECONEIXAMENT = {Data presentació reconeixement},",
				"          DATA_NOTIFICACIO_PAGAMENT = {Notificació carta pagament amb descompte},",
				"          DATA_PROPOSTA = {Data proposta},",
				"          DATA_NOTIFICACIO_PROPOSTA = {Data notificació proposta},",
				"          DATA_AUDIENCIA = {Data audiència},",
				"          DATA_NOTIFICACIO_AUDIENCIA = {Data notificació audiència},",
				"          DATA_RESOLUCIO = {Data resolució},",
				"          DATA_NOTIFICACIO_RESOLUCIO = {Data notificació resolució},",
				"          DATA_PAGAMENT = {Data de pagament},",
				"          DATA_RESOLUCIO_RECURS = {Data resolució del recurs},",
				"          DATA_ENTRADA_RECURS = {Data registre d’entrada del recurs},",
				"          DATA_NOTIFICACIO_RECURS = {Data notificació recurs},",
				"          DATA_CADUCITAT = {Data caducitat},",
				"          DATA_PRESCRIPCIO_INFRACCIO = {Data prescripció infracció},",
				"          DATA_PRESCRIPCIO_SANCIO = {Data prescripció sanció},",
				"          DATA_ALEGACIONS = {Data de presentació de l’alegació}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenombrarCamposTDSAN",
				"RenombrarCamposTDSAN derive(DATA_ALTA_SISTEMA = toDate(DATA_ALTA_SISTEMA, 'dd/MM/yyyy'),",
				"          ID_PERSONA_DENUNCIANT = toInteger(ID_PERSONA_DENUNCIANT),",
				"          DATA_DENUNCIA = toDate(DATA_DENUNCIA, 'dd/MM/yyyy'),",
				"          DATA_INFRACCIO = toDate(DATA_INFRACCIO, 'dd/MM/yyyy'),",
				"          ID_TIPUS_DOCUMENT = toInteger(ID_TIPUS_DOCUMENT),",
				"          NUM_CODI_POSTAL = toInteger(NUM_CODI_POSTAL),",
				"          DATA_ACORD_INICI = toDate(DATA_ACORD_INICI, 'dd/MM/yyyy'),",
				"          DATA_NOTIFICACIO_AI = toDate(DATA_NOTIFICACIO_AI, 'dd/MM/yyyy'),",
				"          IMP_SANCIO = toInteger(IMP_SANCIO),",
				"          DATA_RECONEIXAMENT = toDate(DATA_RECONEIXAMENT, 'dd/MM/yyyy'),",
				"          DATA_NOTIFICACIO_PAGAMENT = toDate(DATA_NOTIFICACIO_PAGAMENT, 'dd/MM/yyyy'),",
				"          DATA_PROPOSTA = toDate(DATA_PROPOSTA, 'dd/MM/yyyy'),",
				"          DATA_NOTIFICACIO_PROPOSTA = toDate(DATA_NOTIFICACIO_PROPOSTA, 'dd/MM/yyyy'),",
				"          DATA_AUDIENCIA = toDate(DATA_AUDIENCIA, 'dd/MM/yyyy'),",
				"          DATA_NOTIFICACIO_AUDIENCIA = toDate(DATA_NOTIFICACIO_AUDIENCIA, 'dd/MM/yyyy'),",
				"          DATA_RESOLUCIO = toDate(DATA_RESOLUCIO, 'dd/MM/yyyy'),",
				"          DATA_NOTIFICACIO_RESOLUCIO = toDate(DATA_NOTIFICACIO_RESOLUCIO, 'dd/MM/yyyy'),",
				"          IMP_SANCIO_FERMA = toInteger(IMP_SANCIO_FERMA),",
				"          IMP_TOTAL_PAGAT = toInteger(IMP_TOTAL_PAGAT),",
				"          DATA_PAGAMENT = toDate(DATA_PAGAMENT, 'dd/MM/yyyy'),",
				"          DATA_ENTRADA_RECURS = toDate(DATA_ENTRADA_RECURS, 'dd/MM/yyyy'),",
				"          DATA_RESOLUCIO_RECURS = toDate(DATA_RESOLUCIO_RECURS, 'dd/MM/yyyy'),",
				"          DATA_NOTIFICACIO_RECURS = toDate(DATA_NOTIFICACIO_RECURS, 'dd/MM/yyyy'),",
				"          IMP_RECURS = toInteger(IMP_RECURS),",
				"          DATA_CADUCITAT = toDate(DATA_CADUCITAT, 'dd/MM/yyyy'),",
				"          DATA_PRESCRIPCIO_INFRACCIO = toDate(DATA_PRESCRIPCIO_INFRACCIO, 'dd/MM/yyyy'),",
				"          DATA_PRESCRIPCIO_SANCIO = toDate(DATA_PRESCRIPCIO_SANCIO, 'dd/MM/yyyy'),",
				"          DATA_ALEGACIONS = toDate(DATA_ALEGACIONS, 'dd/MM/yyyy')) ~> CambiarDataType",
				"CambiarDataType derive(DESC_ESTAT_TRAMITACIO = iif(not(isNull(DESC_MOTIU_ARXIU)), 'Expedient Arxivat',\r",
				"    iif(not(isNull(DATA_PAGAMENT)), 'Expedient Arxivat',\r",
				"        iif(not(isNull(DATA_NOTIFICACIO_RECURS)) && DESC_SENTIT=='Estimat','Expedient Arxivat',\r",
				"            iif(not(isNull(DATA_NOTIFICACIO_RECURS)) && DESC_SENTIT!='Estimat', 'Pendent pagament recurs',\r",
				"                iif(not(isNull(DATA_RESOLUCIO_RECURS)), 'Pendent notificació resolució recurs', \r",
				"                    iif(not(isNull(DATA_ENTRADA_RECURS)), 'Pendent resoldre recurs',\r",
				"                        iif(not(isNull(DATA_NOTIFICACIO_PAGAMENT)), 'Expedient Arxivat',\r",
				"                            iif(not(isNull(DATA_NOTIFICACIO_RESOLUCIO)) && IMP_SANCIO_FERMA>0,'Pendent pagament',\r",
				"                                iif(not(isNull(DATA_NOTIFICACIO_RESOLUCIO)) && (IMP_SANCIO_FERMA==0 || isNull(IMP_SANCIO_FERMA)),'Expedient Arxivat',\r",
				"                                   iif(not(isNull(DATA_RESOLUCIO)),'Pendent notificació resolució',\r",
				"                                        iif(not(isNull(DATA_NOTIFICACIO_AUDIENCIA)),'Pendent Resolució',\r",
				"                                             iif(not(isNull(DATA_AUDIENCIA)),'Pendent Audiència',\r",
				"                                                  iif(not(isNull(DATA_ALEGACIONS)), 'Pendent revisar al·legacions',\r",
				"                                                       iif(not(isNull(DATA_NOTIFICACIO_PROPOSTA)), 'Pendent Al·legacions',\r",
				"                                                            iif(not(isNull(DATA_PROPOSTA)), 'Pendent notificació proposta resolució',\r",
				"                                                                 iif(not(isNull(DATA_RECONEIXAMENT)), 'Pendent pagament anticipat',\r",
				"                                                                      iif(not(isNull(DATA_NOTIFICACIO_AI)), 'Pendent Proposta Resolució',\r",
				"                                                                           iif(not(isNull(DATA_ACORD_INICI)), 'Pendent Acusament AI',\r",
				"                                                                                iif(not(isNull(DATA_DENUNCIA)), 'Pendent Generar AI', 'Nou expedient'))))))))))))))))))),",
				"          FLAG_PAGAMENT = iif(not(isNull(DATA_PAGAMENT)),1,0)) ~> CreacionCampoEstatTramitacio",
				"CreacionCampoEstatTramitacio keyGenerate(output(ID_EXPEDIENT as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> IDEXPEDIENT",
				"IDEXPEDIENT sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID_PERSONA_DENUNCIANT as integer,",
				"          ID_TIPUS_RECURS as string,",
				"          ID_TIPUS_DOCUMENT as integer,",
				"          COD_ALTA as string,",
				"          COD_DENUNCIA_TDSAN as string,",
				"          COD_BAREM as string,",
				"          COD_DOCUMENT as string,",
				"          COD_OPERADOR_FERROVIARI as string,",
				"          COD_ESTAT_EXPEDIENT as string,",
				"          NUM_CODI_POSTAL as integer,",
				"          NUM_EXPEDIENT as string,",
				"          IMP_SANCIO as integer,",
				"          IMP_SANCIO_FERMA as integer,",
				"          IMP_TOTAL_PAGAT as integer,",
				"          IMP_RECURS as integer,",
				"          DESC_TIPUS_GRAVETAT as string,",
				"          DESC_ESTACIO as string,",
				"          DESC_LINIA as string,",
				"          DESC_TRAJECTE as string,",
				"          DESC_TREN as string,",
				"          DESC_CONDUCTA_INFRACTORA as string,",
				"          DESC_CONDUCTA_INFRACTORA_ENTENEDORA as string,",
				"          DESC_NOM_COMPLET as string,",
				"          DESC_ADRECA as string,",
				"          DESC_POBLACIO as string,",
				"          DESC_PROVINCIA as string,",
				"          DESC_MOTIU_ARXIU as string,",
				"          DESC_SENTIT as string,",
				"          DATA_ALTA_SISTEMA as date,",
				"          DATA_DENUNCIA as date,",
				"          DATA_INFRACCIO as date,",
				"          DATA_ACORD_INICI as date,",
				"          DATA_NOTIFICACIO_AI as date,",
				"          DATA_RECONEIXAMENT as date,",
				"          DATA_NOTIFICACIO_PAGAMENT as date,",
				"          DATA_PROPOSTA as date,",
				"          DATA_NOTIFICACIO_PROPOSTA as date,",
				"          DATA_AUDIENCIA as date,",
				"          DATA_NOTIFICACIO_AUDIENCIA as date,",
				"          DATA_RESOLUCIO as date,",
				"          DATA_NOTIFICACIO_RESOLUCIO as date,",
				"          DATA_PAGAMENT as date,",
				"          DATA_RESOLUCIO_RECURS as date,",
				"          DATA_ENTRADA_RECURS as date,",
				"          DATA_NOTIFICACIO_RECURS as date,",
				"          DATA_CADUCITAT as date,",
				"          DATA_PRESCRIPCIO_INFRACCIO as date,",
				"          DATA_PRESCRIPCIO_SANCIO as date,",
				"          DATA_ALEGACIONS as date,",
				"          DESC_ESTAT_TRAMITACIO as string,",
				"          FLAG_PAGAMENT as integer,",
				"          ID_EXPEDIENT as long",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> ODSFactExpedientTDSAN"
			]
		}
	}
}