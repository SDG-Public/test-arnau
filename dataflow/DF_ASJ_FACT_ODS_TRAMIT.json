{
	"name": "DF_ASJ_FACT_ODS_TRAMIT",
	"properties": {
		"folder": {
			"name": "ASJ"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_ASJ_FACT_TRAMIT",
						"type": "DatasetReference"
					},
					"name": "STGFactTRAMIT"
				},
				{
					"dataset": {
						"referenceName": "DM_ASJ_DIM_TIPUS_TRAMIT",
						"type": "DatasetReference"
					},
					"name": "DMDimTipusTramit"
				},
				{
					"dataset": {
						"referenceName": "DM_ASJ_DIM_INFOLOG",
						"type": "DatasetReference"
					},
					"name": "DMDimInfolog"
				},
				{
					"dataset": {
						"referenceName": "ODS_ASJ_FACT_TRAMIT",
						"type": "DatasetReference"
					},
					"name": "ODSFactTramitSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ODS_ASJ_FACT_TRAMIT",
						"type": "DatasetReference"
					},
					"name": "ODSFactTRAMIT"
				},
				{
					"dataset": {
						"referenceName": "ODS_ASJ_FACT_TRAMIT",
						"type": "DatasetReference"
					},
					"name": "ODSFactTramitUpDate"
				}
			],
			"transformations": [
				{
					"name": "NormalizarCampos"
				},
				{
					"name": "JOINTRAMIT"
				},
				{
					"name": "DesglosaCamps"
				},
				{
					"name": "FilterCodiEvent"
				},
				{
					"name": "MaxDataEvent"
				},
				{
					"name": "Filter2"
				},
				{
					"name": "JoinTramitInfolog"
				},
				{
					"name": "Join1"
				},
				{
					"name": "FiltraCampos"
				},
				{
					"name": "FiltraCampos2"
				},
				{
					"name": "Insert"
				},
				{
					"name": "AddData"
				},
				{
					"name": "UpDate"
				},
				{
					"name": "AddData2"
				},
				{
					"name": "AlterRowUpDate"
				}
			],
			"script": "source(output(\n\t\tTRAMITID as decimal(10,0),\n\t\tOBSERVACIONS as string,\n\t\tIDTIPUSTRAMIT as decimal(10,0),\n\t\tIDTRAMITANTERIOR as decimal(10,0),\n\t\tIDTRAMITSEGUENT as decimal(10,0),\n\t\tDATA as timestamp,\n\t\tTERMINI as timestamp,\n\t\tESTAT as decimal(10,0),\n\t\tURGENT as decimal(1,0),\n\t\tNOMLLIURE as string,\n\t\tEXPEDIENTID as decimal(10,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> STGFactTRAMIT\nsource(output(\n\t\tID_TIPUS_TRAMIT as decimal(10,0),\n\t\tDESC_NOM as string,\n\t\tDESC_DESCNOM as string,\n\t\tFLAG_LLIURE as decimal(1,0),\n\t\tFLAG_BAIXA as decimal(1,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimTipusTramit\nsource(output(\n\t\tID_INFORMACIO_LOG as decimal(10,0),\n\t\tID_USUARI as string,\n\t\tID_EXPEDIENT as decimal(10,0),\n\t\tCODI_EVENT as decimal(10,0),\n\t\tDESC_INFO_OBJECTE_CANVIAT as string,\n\t\tDATA_EVENT as timestamp,\n\t\tDATA_INSTANT_EVENT as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DMDimInfolog\nsource(output(\n\t\tID_TRAMIT as decimal(10,0),\n\t\tID_TIPUS_TRAMIT as integer,\n\t\tID_EXPEDIENT as decimal(10,0),\n\t\tDESC_OBSERVACIONS as string,\n\t\tDESC_NOM_LLIURE as string,\n\t\tDATA_TRAMIT as timestamp,\n\t\tFLAG_ESTAT as decimal(10,0),\n\t\tFLAG_URGENT as decimal(1,0),\n\t\tDATA_TANCAMENT as date,\n\t\tDATA_INSERT as timestamp,\n\t\tDATA_MODIFICACIO as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSFactTramitSource\nSTGFactTRAMIT select(mapColumn(\n\t\tID_TRAMIT = TRAMITID,\n\t\tID_TIPUS_TRAMIT = IDTIPUSTRAMIT,\n\t\tID_TRAMIT_ANTERIOR = IDTRAMITANTERIOR,\n\t\tID_TRAMIT_SEGUENT = IDTRAMITSEGUENT,\n\t\tID_EXPEDIENT = EXPEDIENTID,\n\t\tDESC_OBSERVACIONS = OBSERVACIONS,\n\t\tDESC_NOM_LLIURE = NOMLLIURE,\n\t\tDATA_TRAMIT = DATA,\n\t\tDATA_TERMINI = TERMINI,\n\t\tFLAG_ESTAT = ESTAT,\n\t\tFLAG_URGENT = URGENT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NormalizarCampos\nNormalizarCampos, DMDimTipusTramit join(NormalizarCampos@ID_TIPUS_TRAMIT == DMDimTipusTramit@ID_TIPUS_TRAMIT,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JOINTRAMIT\nJOINTRAMIT derive(ID_TIPUS_TRAMIT = iifNull(toInteger(NormalizarCampos@ID_TIPUS_TRAMIT), toInteger(999999))) ~> DesglosaCamps\nDMDimInfolog filter(CODI_EVENT== 9) ~> FilterCodiEvent\nFilterCodiEvent aggregate(groupBy(ID_EXPEDIENT),\n\tDATA_EVENT = max(DATA_EVENT)) ~> MaxDataEvent\nDesglosaCamps filter(FLAG_ESTAT== 1) ~> Filter2\nFilter2, MaxDataEvent join(NormalizarCampos@ID_EXPEDIENT == MaxDataEvent@ID_EXPEDIENT,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinTramitInfolog\nDesglosaCamps, FiltraCampos join(NormalizarCampos@ID_TRAMIT == FiltraCampos@ID_TRAMIT,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoinTramitInfolog select(mapColumn(\n\t\tID_TRAMIT,\n\t\tDATA_EVENT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FiltraCampos\nJoin1 select(mapColumn(\n\t\tID_TRAMIT = NormalizarCampos@ID_TRAMIT,\n\t\tID_TIPUS_TRAMIT,\n\t\tID_EXPEDIENT,\n\t\tDESC_OBSERVACIONS,\n\t\tDESC_NOM_LLIURE,\n\t\tDATA_TRAMIT,\n\t\tDATA_TANCAMENT = DATA_EVENT,\n\t\tFLAG_ESTAT,\n\t\tFLAG_URGENT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FiltraCampos2\nFiltraCampos2, ODSFactTramitSource exists(FiltraCampos2@ID_TRAMIT == ODSFactTramitSource@ID_TRAMIT,\n\tnegate:true,\n\tbroadcast: 'auto')~> Insert\nInsert derive(DATA_INSERT = currentTimestamp(),\n\t\tDATA_MODIFICACIO = currentTimestamp()) ~> AddData\nFiltraCampos2, ODSFactTramitSource exists(FiltraCampos2@ID_TRAMIT == ODSFactTramitSource@ID_TRAMIT,\n\tnegate:false,\n\tbroadcast: 'auto')~> UpDate\nUpDate derive(DATA_MODIFICACIO = currentTimestamp()) ~> AddData2\nAddData2 alterRow(updateIf(ID_TRAMIT==ID_TRAMIT)) ~> AlterRowUpDate\nAddData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_TRAMIT as decimal(10,0),\n\t\tID_TIPUS_TRAMIT as integer,\n\t\tID_EXPEDIENT as decimal(10,0),\n\t\tDESC_OBSERVACIONS as string,\n\t\tDESC_NOM_LLIURE as string,\n\t\tDATA_TRAMIT as timestamp,\n\t\tFLAG_ESTAT as decimal(10,0),\n\t\tFLAG_URGENT as decimal(1,0),\n\t\tDATA_TANCAMENT as date,\n\t\tDATA_INSERT as timestamp,\n\t\tDATA_MODIFICACIO as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSFactTRAMIT\nAlterRowUpDate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID_TRAMIT as decimal(10,0),\n\t\tID_TIPUS_TRAMIT as integer,\n\t\tID_EXPEDIENT as decimal(10,0),\n\t\tDESC_OBSERVACIONS as string,\n\t\tDESC_NOM_LLIURE as string,\n\t\tDATA_TRAMIT as timestamp,\n\t\tFLAG_ESTAT as decimal(10,0),\n\t\tFLAG_URGENT as decimal(1,0),\n\t\tDATA_TANCAMENT as date,\n\t\tDATA_INSERT as timestamp,\n\t\tDATA_MODIFICACIO as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ID_TRAMIT'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ODSFactTramitUpDate"
		}
	}
}